name: Build and Deploy to DockerHub

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ethindia

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update production compose file
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        # Update the production compose file with the new image
        sed -i "s|your-dockerhub-username/ethindia:latest|${{ secrets.DOCKERHUB_USERNAME }}/ethindia:latest|g" docker-compose.production.yml
        
    - name: Create deployment artifact
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        mkdir -p deployment
        cp docker-compose.production.yml deployment/
        cp deploy-dockerhub.sh deployment/
        cp docker-manage.sh deployment/
        cp setup-env.sh deployment/
        cp env.example.root deployment/
        cp env.example.hedera deployment/
        
    - name: Upload deployment artifact
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v3
      with:
        name: deployment-files
        path: deployment/

  # Optional: Deploy to a staging environment
  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: staging
    
    steps:
    - name: Download deployment artifact
      uses: actions/download-artifact@v3
      with:
        name: deployment-files
        
    - name: Deploy to staging
      run: |
        echo "ðŸš€ Deployment to staging would happen here"
        echo "Image: ${{ secrets.DOCKERHUB_USERNAME }}/ethindia:latest"
        # Add your staging deployment commands here
        # For example:
        # ssh user@staging-server 'docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ethindia:latest'
        # ssh user@staging-server 'docker-compose -f docker-compose.production.yml up -d'
